{"version":3,"sources":["App.style.ts","types/movieTypes.ts","api/movie-api.ts","hook/useDetail.ts","components/nowplayingList.tsx","components/popularList.tsx","components/topLateList.tsx","components/upcomingList.tsx","types/scarchTypes.ts","_layout/navLayout.tsx","pages/homeMain.tsx","pages/popularMain.tsx","pages/nowplayingMain.tsx","pages/upcomingMain.tsx","pages/toplateMain.tsx","types/creditsTypes.ts","components/movieDetail.tsx","actions/searchActions.ts","saga/search.ts","components/searchList.tsx","pages/searchMain.tsx","App.tsx","reducer/list.ts","reducer/search.ts","reducer/credits.ts","reducer/index.ts","actions/movieActions.ts","saga/list.ts","actions/creditsActions.ts","saga/credits.ts","saga/index.ts","store/index.ts","index.tsx"],"names":["Wrapper","styled","div","_templateObject","Object","taggedTemplateLiteral","LOAD_ALLPOSTS_REQUEST","IMAGE_URL","api","axios","create","baseURL","params","api_key","process","language","page","useDetail","arguments","length","undefined","navigate","useNavigate","useCallback","e","state","NowplayingList","handler","nowplaying","useSelector","list","results","react_default","a","createElement","Fragment","className","map","item","key","id","onClick","src","concat","poster_path","alt","title","release_date","replace","PopularList","popular","TopLateList","toprated","UpcomingList","upcoming","SEARCH_ALLPOSTS_REQUEST","NavLayout","_ref","children","dispatch","useDispatch","_useState","useState","_useState2","slicedToArray","name","setName","target","value","submit","preventDefault","type","payload","query","Button","variant","color","react_router_dom","to","onSubmit","TextField","label","onChange","HomeMain","navLayout","popularList","nowplayingList","upcomingList","topLateList","PopularMain","NowplayingMain","UpcomingMain","ToplateMain","CREDITS_ALLPOSTS_REQUEST","MovieDetail","location","useLocation","loading","credits","movie","useEffect","movie_id","LinearProgress","MovieDetailStyled","backdrop_path","original_title","vote_average","overview","crew","Math","random","job","cast","order","movieDetail_templateObject","props","searchAllpostsSuccess","data","searchAllpostsFailure","error","search","watchSearch","searchSaga","searchAPI","_callee","regenerator_default","wrap","_context4","prev","next","get","sent","abrupt","stop","action","resSearch","_context","call","put","t0","_marked","_context2","takeLatest","_marked2","_context3","all","fork","_marked3","SearchList","SearchListStyled","ul","searchList_templateObject","SearchMain","searchList","App","basename","react_router","path","element","homeMain","popularMain","nowplayingMain","upcomingMain","toplateMain","movieDetail","searchMain","intialState","success","ListReducer","produce","draft","SearchReducer","CreditsReducer","rootReducer","combineReducers","loadAllpostsSuccess","loadAllpostsFailure","watchList","listSaga","popularAPI","nowplayingAPI","_callee2","_context5","upcomingAPI","_callee3","_context6","topratedAPI","_callee4","_context7","resPopular","resNowplaying","resUpcoming","resToprated","list_marked","list_marked2","list_marked3","creditsAllpostsSuccess","creditsAllpostsFailure","watchCredits","creditsSaga","creditsAPI","resCredits","credits_marked","credits_marked2","credits_marked3","rootSaga","saga_marked","logger","createLogger","sagaMidleware","createSagaMiddleware","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","createRoot","document","getElementById","render","es","src_App","run"],"mappings":"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","file":"static/js/main.4dcc7748.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Wrapper = styled.div`\n    display: flex;\n    justify-content: space-between;\n    flex-direction: column;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    font-family: Arial, Helvetica, sans-serif;\n    & a {\n        color: #000;\n        text-decoration: none;\n    }\n    .nav {\n        align-items: flex-end;\n    }\n    .nav a {\n        color: #fff;\n    }\n    & ul {\n        padding: 0;\n        margin: 0;\n        display: flex;\n        overflow-x: scroll;\n        -ms-overflow-style: none;\n    }\n\n    & ul::-webkit-scrollbar{ display:none; }\n\n    & li {\n        list-style: none;\n        border-radius: 5px;\n        margin: 10px;\n    }\n    & .movie_list li {\n        box-shadow: 5px 5px 5px #d9d9d9;\n    }\n    & .movie_list li div:nth-child(1) {\n        width: 200px;\n        height: 300px;\n        border-top-left-radius: 5px;\n        border-top-right-radius: 5px;\n        overflow: hidden;\n        display: flex;\n        justify-content: center;\n    }\n\n    & .movie_list li div:nth-child(2) {\n        border-top: 1px solid #d9d9d9;\n        border-bottom-left-radius: 5px;\n        border-bottom-right-radius: 5px;\n    }\n\n    & p {\n        margin: 0;\n        padding: 0 20px;\n    }\n\n    & .movie_text {\n        height: 70px;\n        display: flex;\n        flex-direction: column;\n        justify-content: center;\n        font-size: 14px;\n    }\n\n    & .movie_text p {\n        margin: 2px 0;\n    }\n\n    & .movie_title {\n        font-weight: bold;\n    }\n\n    & img {\n        height: 100%;\n    }\n\n    form {\n        display: flex;\n        align-items: end;\n    }\n`;","export const LOAD_ALLPOSTS_REQUEST = \"LOAD_ALLPOSTS_REQUEST\" as const;\nexport const LOAD_ALLPOSTS_SUCCESS = \"LOAD_ALLPOSTS_SUCCESS\" as const;\nexport const LOAD_ALLPOSTS_FAILURE = \"LOAD_ALLPOSTS_FAILURE\" as const;\n\nexport type MovieType = {\n    id: number;\n    overview: string;\n    popularity: number;\n    poster_path: string;\n    release_date: string;\n    title: string;\n    original_title: string;\n    vote_count: number;\n    vote_average: number;\n    backdrop_path: string\n}\n\nexport type ResultsType = {\n    popular: MovieType[]\n    nowplaying: MovieType[]\n    toprated: MovieType[]\n    upcoming: MovieType[],\n}\n\nexport type MovieProps = {\n    results: ResultsType\n    loading: boolean\n    success: boolean\n    error: null\n}","import axios from \"axios\";\n\nexport const API_URL: string =  'https://api.themoviedb.org/3/';\nexport const IMAGE_URL: string = 'https://image.tmdb.org/t/p/original';\n\nexport const api = axios.create({\n    baseURL: API_URL,\n    params: {\n        api_key: process.env.REACT_APP_API_KEY,\n        language: 'ko',\n        page: 1,\n    }\n});\n","import { useCallback } from \"react\";\nimport { useNavigate } from 'react-router-dom';\nimport { MovieType } from \"../types/movieTypes\";\nimport { SearchType } from \"../types/scarchTypes\";\n\nexport const useDetail = (initialValue: undefined | null = null) => {\n    const navigate = useNavigate();\n\n    const handler = useCallback((e: MovieType | SearchType) => {\n        navigate('/detail', {state: e});\n    }, [navigate]);\n\n    return handler;\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { IMAGE_URL } from '../api/movie-api';\nimport { useDetail } from '../hook/useDetail';\nimport { MovieType } from '../types/movieTypes';\n\nconst NowplayingList = () => {\n  const handler = useDetail(null);\n  const { nowplaying } = useSelector((state: any) => state.list.results);\n\n  return (\n    <>\n      <h3>현재 상영 영화 Top 20</h3>\n      <ul className='movie_list'>\n        {nowplaying.map((item: MovieType) => (\n          <li key={item.id} onClick={() => handler(item)}>\n            <div>\n              <img src={`${IMAGE_URL}${item.poster_path}`} alt={item.title} />\n            </div>\n            <div className='movie_text'>\n              <p className='movie_title'>{item.title}</p>\n              <p>\n                {item.release_date\n                  .replace(/-/g, '')\n                  .replace(/(\\d{4})(\\d{2})(\\d{2})/, `$2월 $3, $1`)}\n              </p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default NowplayingList;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { IMAGE_URL } from '../api/movie-api';\nimport { useDetail } from '../hook/useDetail';\nimport { MovieType } from '../types/movieTypes';\n\nconst PopularList = () => {\n  const handler = useDetail(null);\n  const { popular } = useSelector((state: any) => state.list.results);\n\n  return (\n    <>\n      <h3>인기 영화 Top 20</h3>\n      <ul className='movie_list'>\n        {popular.map((item: MovieType) => (\n          <li key={item.id} onClick={() => handler(item)}>\n            <div>\n              <img src={`${IMAGE_URL}${item.poster_path}`} alt={item.title} />\n            </div>\n            <div className='movie_text'>\n              <p className='movie_title'>{item.title}</p>\n              <p>\n                {item.release_date\n                  .replace(/-/g, '')\n                  .replace(/(\\d{4})(\\d{2})(\\d{2})/, `$2월 $3, $1`)}\n              </p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default PopularList;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { IMAGE_URL } from '../api/movie-api';\nimport { useDetail } from '../hook/useDetail';\nimport { MovieType } from '../types/movieTypes';\n\nconst TopLateList = () => {\n  const handler = useDetail(null);\n  const { toprated } = useSelector((state: any) => state.list.results);\n\n  return (\n    <>\n      <h3>높은 평점의 인기영화 Top 20</h3>\n      <ul className='movie_list'>\n        {toprated.map((item: MovieType) => (\n          <li key={item.id} onClick={() => handler(item)}>\n            <div>\n              <img src={`${IMAGE_URL}${item.poster_path}`} alt={item.title} />\n            </div>\n            <div className='movie_text'>\n              <p className='movie_title'>{item.title}</p>\n              <p>\n                {item.release_date\n                  .replace(/-/g, '')\n                  .replace(/(\\d{4})(\\d{2})(\\d{2})/, `$2월 $3, $1`)}\n              </p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default TopLateList;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { IMAGE_URL } from '../api/movie-api';\nimport { useDetail } from '../hook/useDetail';\nimport { MovieType } from '../types/movieTypes';\n\nconst UpcomingList = () => {\n  const handler = useDetail(null);\n  const { upcoming } = useSelector((state: any) => state.list.results);\n\n  return (\n    <>\n      <h3>개봉 예정 영화 Top 20</h3>\n      <ul className='movie_list'>\n        {upcoming.map((item: MovieType) => (\n          <li key={item.id} onClick={() => handler(item)}>\n            <div>\n              <img src={`${IMAGE_URL}${item.poster_path}`} alt={item.title} />\n            </div>\n            <div className='movie_text'>\n              <p className='movie_title'>{item.title}</p>\n              <p>\n                {item.release_date\n                  .replace(/-/g, '')\n                  .replace(/(\\d{4})(\\d{2})(\\d{2})/, `$2월 $3, $1`)}\n              </p>\n            </div>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default UpcomingList;\n","export const SEARCH_ALLPOSTS_REQUEST = \"SEARCH_ALLPOSTS_REQUEST\" as const;\nexport const SEARCH_ALLPOSTS_SUCCESS = \"SEARCH_ALLPOSTS_SUCCESS\" as const;\nexport const SEARCH_ALLPOSTS_FAILURE = \"SEARCH_ALLPOSTS_FAILURE\" as const;\n\nexport type SearchType = {\n  id: number,\n  poster_path: string | null,\n  adult: boolean,\n  overview: string,\n  release_date: string,\n  original_title: string,\n  title: string,\n}\n\nexport type SearchResult = {\n  search: SearchType[]\n}\n\nexport type SearchProps = {\n  results: SearchResult\n  loading: boolean\n  success: boolean\n  error: null\n}","import React, { useCallback, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport { Button, TextField } from '@material-ui/core';\nimport { SEARCH_ALLPOSTS_REQUEST } from '../types/scarchTypes';\n\nconst NavLayout = ({ children }: React.PropsWithChildren<unknown>) => {\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [name, setName] = useState<string>('');\n\n  const handler = useCallback((e: React.ChangeEvent<HTMLInputElement>) => {\n    setName(e.target.value);\n  }, []);\n\n  const submit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      dispatch({\n        type: SEARCH_ALLPOSTS_REQUEST,\n        payload: {\n          query: name,\n        },\n      });\n      navigate('/search');\n    },\n    [name]\n  );\n\n  return (\n    <div>\n      <ul className='nav'>\n        <li>\n          <Button variant='contained' color='primary'>\n            <Link to='/'>Home</Link>\n          </Button>\n        </li>\n        <li>\n          <Button variant='contained' color='primary'>\n            <Link to='/popular'>인기</Link>\n          </Button>\n        </li>\n        <li>\n          <Button variant='contained' color='primary'>\n            <Link to='/nowplaying'>현재 상영 중</Link>\n          </Button>\n        </li>\n        <li>\n          <Button variant='contained' color='primary'>\n            <Link to='/upcoming'>개봉 예정</Link>\n          </Button>\n        </li>\n        <li>\n          <Button variant='contained' color='primary'>\n            <Link to='/topLate'>높은 평점</Link>\n          </Button>\n        </li>\n        <li>\n          <form onSubmit={submit}>\n            <TextField\n              id='standard-basic'\n              label='영화 이름 검색'\n              variant='standard'\n              value={name}\n              onChange={handler}\n            />\n            <Button variant='contained' type='submit' color='primary'>\n              검색\n            </Button>\n          </form>\n        </li>\n      </ul>\n      {children}\n    </div>\n  );\n};\n\nexport default NavLayout;\n","import React from 'react';\nimport NowplayingList from '../components/nowplayingList';\nimport PopularList from '../components/popularList';\nimport TopLateList from '../components/topLateList';\nimport UpcomingList from '../components/upcomingList';\nimport NavLayout from '../_layout/navLayout';\n\nconst HomeMain = () => {\n  return (\n    <NavLayout>\n      <PopularList />\n      <NowplayingList />\n      <UpcomingList />\n      <TopLateList />\n    </NavLayout>\n  );\n};\n\nexport default HomeMain;\n","import React from 'react'\nimport PopularList from '../components/popularList';\nimport NavLayout from '../_layout/navLayout';\n\nconst PopularMain = () => {\n    return (\n        <NavLayout>\n            <PopularList />\n        </NavLayout>\n    )\n}\n\nexport default PopularMain;","import React from 'react'\nimport NowplayingList from '../components/nowplayingList';\nimport NavLayout from '../_layout/navLayout';\n\nconst NowplayingMain = () => {\n    return (\n        <NavLayout>\n            <NowplayingList />\n        </NavLayout>\n    )\n}\n\nexport default NowplayingMain;","import React from 'react'\nimport UpcomingList from '../components/upcomingList';\nimport NavLayout from '../_layout/navLayout';\n\nconst UpcomingMain = () => {\n    return (\n        <NavLayout>\n            <UpcomingList />\n        </NavLayout>\n    )\n}\n\nexport default UpcomingMain;","import React from 'react'\nimport TopLateList from '../components/topLateList';\nimport NavLayout from '../_layout/navLayout';\n\nconst ToplateMain = () => {\n    return (\n        <NavLayout>\n            <TopLateList />\n        </NavLayout>\n    )\n}\n\nexport default ToplateMain;","export const CREDITS_ALLPOSTS_REQUEST = \"CREDITS_ALLPOSTS_REQUEST\" as const;\nexport const CREDITS_ALLPOSTS_SUCCESS = \"CREDITS_ALLPOSTS_SUCCESS\" as const;\nexport const CREDITS_ALLPOSTS_FAILURE = \"CREDITS_ALLPOSTS_FAILURE\" as const;\n\nexport type castType = {\n  id: number,\n  name: string,\n  character: string,\n  order: number,\n  profile_path: string\n}\n\nexport type crewType = {\n  id: number,\n  name: string,\n  job: string,\n  profile_path: string\n}\n\nexport type CreditsType = {\n  id: number,\n  cast: castType[],\n  crew: crewType[]\n}\n\nexport type CreditsResult = {\n  credits: CreditsType\n}\n\nexport type CreditsProps = {\n  results: CreditsResult\n  loading: boolean\n  success: boolean\n  error: null\n}","import React, { useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { IMAGE_URL } from '../api/movie-api';\nimport NavLayout from '../_layout/navLayout';\nimport { MovieType } from '../types/movieTypes';\nimport { castType, crewType } from '../types/creditsTypes';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport { CREDITS_ALLPOSTS_REQUEST } from '../types/creditsTypes';\n\nconst MovieDetail = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const { loading } = useSelector((state: any) => state.credits);\n  const { credits } = useSelector((state: any) => state.credits.results);\n  const movie = location.state as MovieType; // state의 타입이 unknown이므로 파라미터값의 타입을 지정해주면 된다.\n\n  useEffect(() => {\n    dispatch({\n      type: CREDITS_ALLPOSTS_REQUEST,\n      payload: {\n        movie_id: movie.id,\n      },\n    });\n  }, []);\n\n  if (loading) return <LinearProgress />;\n\n  return (\n    <NavLayout>\n      {movie ? (\n        <MovieDetailStyled color={movie.backdrop_path}>\n          <div className='bg'></div>\n          <div className='detail-wrap'>\n            <div className='movie-inner'>\n              <p>{movie.title}</p>\n              <p>{movie.original_title}</p>\n              <div>\n                <img\n                  src={`${IMAGE_URL}${movie.poster_path}`}\n                  alt={movie.title}\n                />\n              </div>\n            </div>\n            <div className='movie-info'>\n              <p>\n                <b>개봉일</b> :{' '}\n                {movie.release_date\n                  .replace(/-/g, '')\n                  .replace(/(\\d{4})(\\d{2})(\\d{2})/, `$2월 $3, $1`)}\n              </p>\n              <p>\n                <b>평&nbsp;&nbsp;&nbsp;점</b> : {movie.vote_average}점\n              </p>\n              <p className='synopsis'>\n                <b>줄거리</b> : <br />\n                {movie.overview}\n              </p>\n              <p>\n                <b>감&nbsp;&nbsp;&nbsp;독</b> :&nbsp;\n                {credits.crew.map((item: crewType) => (\n                  <b key={Math.random()}>\n                    {item.job === 'Director' && (\n                      <span key={item.id}>{item.name}</span>\n                    )}\n                  </b>\n                ))}\n              </p>\n              <p>\n                <b>출&nbsp;&nbsp;&nbsp;연</b> : <br />\n                {credits.cast.map((item: castType) => (\n                  <b key={Math.random()} className='crew'>\n                    {item.order === 0 && (\n                      <span>\n                        {item.name},<br />\n                      </span>\n                    )}\n                    {item.order === 1 && (\n                      <span>\n                        {item.name},<br />\n                      </span>\n                    )}\n                    {item.order === 2 && (\n                      <span>\n                        {item.name},<br />\n                      </span>\n                    )}\n                    {item.order === 3 && (\n                      <span>\n                        {item.name},<br />\n                      </span>\n                    )}\n                    {item.order === 4 && (\n                      <span>\n                        {item.name},<br />\n                      </span>\n                    )}\n                    {item.order === 5 && <span>{item.name} </span>}\n                  </b>\n                ))}\n              </p>\n            </div>\n          </div>\n        </MovieDetailStyled>\n      ) : (\n        <h1>표시항목 없음</h1>\n      )}\n    </NavLayout>\n  );\n};\n\nexport default MovieDetail;\n\nconst MovieDetailStyled = styled.div`\n  text-align: left;\n  color: #fff;\n\n  & p {\n    padding: 0;\n  }\n\n  .bg {\n    position: absolute;\n    z-index: 10;\n    width: 99vw;\n    height: 93vh;\n    background: url(${IMAGE_URL}${(props) => props.color}) no-repeat center\n      top/cover;\n  }\n\n  .detail-wrap {\n    width: 99vw;\n    height: 93vh;\n    position: absolute;\n    z-index: 100;\n    display: flex;\n    background-color: rgba(0, 0, 0, 0.7);\n  }\n\n  .detail-wrap div:nth-child(1) {\n    margin: 0 30px;\n  }\n\n  .movie-inner p:nth-child(1) {\n    font-size: 30px;\n    font-weight: 600;\n    line-height: 28px;\n    margin-top: 20px;\n  }\n\n  .movie-inner p:nth-child(2) {\n    margin-bottom: 15px;\n  }\n\n  .movie-info {\n    width: 700px;\n    margin-top: 60px;\n  }\n\n  .movie-info p {\n    margin: 20px 0;\n    font-size: 18px;\n  }\n\n  .synopsis {\n    line-height: 30px;\n  }\n\n  & img {\n    width: 400px;\n    margin-bottom: 20px;\n  }\n  .crew span {\n    line-height: 30px;\n  }\n`;\n","import { SEARCH_ALLPOSTS_REQUEST, SEARCH_ALLPOSTS_SUCCESS, SEARCH_ALLPOSTS_FAILURE, SearchResult } from \"../types/scarchTypes\";\n\nexport const searchAllpostsRequest = (query: string) => ({  \n    type: SEARCH_ALLPOSTS_REQUEST,\n    payload: {\n        query: query\n    }\n});\n\nexport const searchAllpostsSuccess = (results: SearchResult) => ({\n    type: SEARCH_ALLPOSTS_SUCCESS,\n    payload: {\n        data: results\n    }\n});\n\nexport const searchAllpostsFailure = (error: any) => ({\n    type: SEARCH_ALLPOSTS_FAILURE,\n    payload: error\n});\n\nexport type ActionRequest = \n    | ReturnType<typeof searchAllpostsRequest> \n    | ReturnType<typeof searchAllpostsSuccess> \n    | ReturnType<typeof searchAllpostsFailure>;","import { all, fork, takeLatest, put, call } from 'redux-saga/effects';\nimport { searchAllpostsSuccess, searchAllpostsFailure } from '../actions/searchActions';\nimport { api } from '../api/movie-api';\nimport { SEARCH_ALLPOSTS_REQUEST, SearchType } from '../types/scarchTypes';\n\nexport let query: string = '';\n\nasync function searchAPI() {\n  return await ((await api.get(`/search/movie?query=${query}`)).data).results;\n}\n\nfunction* search(action: any) {\n  try {\n    query = action.payload.query;\n    const resSearch: SearchType[] = yield call(searchAPI);\n    \n    yield put(searchAllpostsSuccess({\n      search: resSearch\n    }))\n  } catch (error: any) {\n    yield put(searchAllpostsFailure(error));\n  }\n}\n\nfunction* watchSearch() {\n  yield takeLatest(SEARCH_ALLPOSTS_REQUEST, search);\n}\n\nexport default function* searchSaga() {\n  yield all([\n      fork(watchSearch)\n  ])\n}","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { IMAGE_URL } from '../api/movie-api';\nimport { useDetail } from '../hook/useDetail';\nimport { SearchType } from '../types/scarchTypes';\nimport styled from 'styled-components';\nimport { query } from '../saga/search';\n\nconst SearchList = () => {\n  const handler = useDetail(null);\n  const { search } = useSelector((state: any) => state.search.results);\n\n  return (\n    <>\n      <h3>검색 결과 : {query}</h3>\n      <SearchListStyled className='movie_list'>\n        {search.map((item: SearchType) => (\n          <li key={item.id} onClick={() => handler(item)}>\n            <div>\n              <img src={`${IMAGE_URL}${item.poster_path}`} alt={item.title} />\n            </div>\n            <div className='movie_text'>\n              <p className='movie_title'>{item.title}</p>\n              <p>\n                {item.release_date\n                  .replace(/-/g, '')\n                  .replace(/(\\d{4})(\\d{2})(\\d{2})/, `$2월 $3, $1`)}\n              </p>\n            </div>\n          </li>\n        ))}\n      </SearchListStyled>\n    </>\n  );\n};\n\nexport default SearchList;\n\nconst SearchListStyled = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n`;\n","import React from 'react';\nimport SearchList from '../components/searchList';\nimport NavLayout from '../_layout/navLayout';\n\nconst SearchMain = () => {\n  return (\n    <NavLayout>\n      <SearchList />\n    </NavLayout>\n  );\n};\n\nexport default SearchMain;\n","import React from 'react';\nimport { useEffect } from 'react';\nimport { Wrapper } from './App.style';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport { LOAD_ALLPOSTS_REQUEST } from './types/movieTypes';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport HomeMain from './pages/homeMain';\nimport PopularMain from './pages/popularMain';\nimport NowplayingMain from './pages/nowplayingMain';\nimport UpcomingMain from './pages/upcomingMain';\nimport ToplateMain from './pages/toplateMain';\nimport MovieDetail from './components/movieDetail';\nimport SearchMain from './pages/searchMain';\n\nfunction App() {\n  const { loading } = useSelector((state: any) => state.list);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch({\n      type: LOAD_ALLPOSTS_REQUEST,\n    });\n  }, []);\n\n  if (loading) return <LinearProgress />;\n\n  return (\n    <Wrapper className='App'>\n      <Router basename={process.env.PUBLIC_URL}>\n        <Routes>\n          <Route path='/' element={<HomeMain />}></Route>\n          <Route path='/popular' element={<PopularMain />}></Route>\n          <Route path='/nowplaying' element={<NowplayingMain />}></Route>\n          <Route path='/upcoming' element={<UpcomingMain />}></Route>\n          <Route path='/topLate' element={<ToplateMain />}></Route>\n          <Route path='/detail' element={<MovieDetail />}></Route>\n          <Route path='/search' element={<SearchMain />}></Route>\n        </Routes>\n      </Router>\n    </Wrapper>\n  );\n}\n\nexport default App;\n","import { LOAD_ALLPOSTS_REQUEST, LOAD_ALLPOSTS_SUCCESS, LOAD_ALLPOSTS_FAILURE, MovieProps } from '../types/movieTypes';\nimport { ActionRequest } from '../actions/movieActions';\nimport produce from 'immer';\n\nexport const intialState: MovieProps = {\n    results: {\n        popular: [],\n        nowplaying: [],\n        toprated: [],\n        upcoming: [],\n    },\n    loading: false,\n    success: false,\n    error: null,\n}\n\nconst ListReducer = (state: MovieProps = intialState, action: ActionRequest) => {\n    return produce(state, (draft) => {\n        switch (action.type) {\n            case LOAD_ALLPOSTS_REQUEST:\n                draft.loading = true;\n                break;\n\n            case LOAD_ALLPOSTS_SUCCESS:\n                draft.loading = false;\n                draft.success = true;\n                draft.results = action.payload.data;\n                break;\n\n            case LOAD_ALLPOSTS_FAILURE:\n                draft.error = action.payload;\n                break;\n\n            default: \n                return state;\n        }\n    })\n}\n\nexport default ListReducer;","import { SEARCH_ALLPOSTS_REQUEST, SEARCH_ALLPOSTS_SUCCESS, SEARCH_ALLPOSTS_FAILURE, SearchProps } from \"../types/scarchTypes\";\nimport { ActionRequest } from \"../actions/searchActions\";\nimport produce from \"immer\";\n\nexport const intialState: SearchProps = {\n  results: {\n    search: []\n  },\n  loading: false,\n  success: false,\n  error: null\n}\n\nconst SearchReducer = (state: SearchProps = intialState, action: ActionRequest) => {\n  return produce(state, (draft) => {\n    switch (action.type) {\n      case SEARCH_ALLPOSTS_REQUEST:\n        draft.loading = true;\n        break;\n        \n        case SEARCH_ALLPOSTS_SUCCESS:\n          draft.loading = false;\n          draft.success = true;\n          draft.results = action.payload.data;\n        break;\n\n      case SEARCH_ALLPOSTS_FAILURE:\n        draft.error = action.payload;\n        break;\n\n      default: \n        return state;\n    }\n  })\n}\n\nexport default SearchReducer;","import { CREDITS_ALLPOSTS_REQUEST, CREDITS_ALLPOSTS_SUCCESS, CREDITS_ALLPOSTS_FAILURE, CreditsProps, CreditsType } from '../types/creditsTypes';\nimport { ActionRequest } from '../actions/creditsActions';\nimport produce from 'immer';\n\nexport const intialState: CreditsProps = {\n    results: {\n      credits: {\n        id: 0,\n        cast: [],\n        crew: []\n      },\n    },\n    loading: false,\n    success: false,\n    error: null,\n}\n\nconst CreditsReducer = (state: CreditsProps = intialState, action: ActionRequest) => {\n    return produce(state, (draft) => {\n        switch (action.type) {\n          case CREDITS_ALLPOSTS_REQUEST:\n            draft.loading = true;\n            break;\n\n          case CREDITS_ALLPOSTS_SUCCESS:\n            draft.loading = false;\n            draft.success = true;\n            draft.results = action.payload.data;\n            break;\n\n          case CREDITS_ALLPOSTS_FAILURE:\n            draft.error = action.payload;\n            break;\n\n          default: \n            return state;\n        }\n    })\n}\n\nexport default CreditsReducer;","import { combineReducers } from 'redux';\nimport list from './list';\nimport search from './search';\nimport credits from './credits';\n\nconst rootReducer = combineReducers({\n    list,\n    search,\n    credits,\n});\n\nexport default rootReducer;","import { LOAD_ALLPOSTS_REQUEST, LOAD_ALLPOSTS_SUCCESS, LOAD_ALLPOSTS_FAILURE, ResultsType } from '../types/movieTypes';\n\nexport const loadAllpostsRequest = () => ({\n    type: LOAD_ALLPOSTS_REQUEST,\n});\n\nexport const loadAllpostsSuccess = (results: ResultsType) => ({\n    type: LOAD_ALLPOSTS_SUCCESS,\n    payload: {\n        data: results\n    }\n});\n\nexport const loadAllpostsFailure = (error: any) => ({\n    type: LOAD_ALLPOSTS_FAILURE,\n    payload: error\n});\n\nexport type ActionRequest = \n    | ReturnType<typeof loadAllpostsRequest> \n    | ReturnType<typeof loadAllpostsSuccess> \n    | ReturnType<typeof loadAllpostsFailure>;","import { all, fork, takeLatest, put, call } from 'redux-saga/effects';\nimport { loadAllpostsSuccess, loadAllpostsFailure } from '../actions/movieActions';\nimport { api } from '../api/movie-api';\nimport { LOAD_ALLPOSTS_REQUEST, MovieType } from '../types/movieTypes';\n\nlet movie_id: number[] = [];\n\nasync function popularAPI() {\n    return await ((await api.get(\"movie/popular\")).data).results;\n}\n\nasync function nowplayingAPI() {\n    return await ((await api.get(\"movie/now_playing\")).data).results;\n}\n\nasync function upcomingAPI() {\n    return await ((await api.get(\"movie/upcoming\")).data).results;\n}\n\nasync function topratedAPI() {\n    return await ((await api.get(\"movie/top_rated\")).data).results;\n}\n\nfunction* list() {\n    try {\n        const resPopular: MovieType[] = yield call(popularAPI);\n        const resNowplaying: MovieType[] = yield call(nowplayingAPI);\n        const resUpcoming: MovieType[] = yield call(upcomingAPI);\n        const resToprated: MovieType[] = yield call(topratedAPI);\n\n        yield put(loadAllpostsSuccess({\n            popular: resPopular,\n            nowplaying: resNowplaying,\n            upcoming: resUpcoming,\n            toprated: resToprated,\n        }))\n    } catch (error: any) {\n        yield put(loadAllpostsFailure(error));\n    }\n}\n\nfunction* watchList() {\n    yield takeLatest(LOAD_ALLPOSTS_REQUEST, list);\n}\n\nexport default function* listSaga() {\n    yield all([\n        fork(watchList)\n    ])\n}","import { CREDITS_ALLPOSTS_REQUEST, CREDITS_ALLPOSTS_SUCCESS, CREDITS_ALLPOSTS_FAILURE, CreditsResult } from \"../types/creditsTypes\";\n\nexport const creditsAllpostsRequest = (movie_id: number) => ({  \n    type: CREDITS_ALLPOSTS_REQUEST,\n    payload: {\n      movie_id: movie_id\n    }\n});\n\nexport const creditsAllpostsSuccess = (results: CreditsResult) => ({\n    type: CREDITS_ALLPOSTS_SUCCESS,\n    payload: {\n        data: results\n    }\n});\n\nexport const creditsAllpostsFailure = (error: any) => ({\n    type: CREDITS_ALLPOSTS_FAILURE,\n    payload: error\n});\n\nexport type ActionRequest = \n    | ReturnType<typeof creditsAllpostsRequest> \n    | ReturnType<typeof creditsAllpostsSuccess> \n    | ReturnType<typeof creditsAllpostsFailure>;","import { all, fork, takeLatest, put, call } from 'redux-saga/effects';\nimport { creditsAllpostsSuccess, creditsAllpostsFailure } from '../actions/creditsActions';\nimport { api } from '../api/movie-api';\nimport { CREDITS_ALLPOSTS_REQUEST, CreditsType } from '../types/creditsTypes';\n\nlet movie_id: number = 0;\n\nasync function creditsAPI() {\n  return await ((await api.get(`/movie/${movie_id}/credits`)).data);\n}\n\nfunction* credits(action: any) {\n  try {\n    movie_id = action.payload.movie_id;\n    const resCredits: CreditsType = yield call(creditsAPI);\n    \n    yield put(creditsAllpostsSuccess({\n      credits: resCredits,\n    }))\n  } catch (error: any) {\n      yield put(creditsAllpostsFailure(error));\n  }\n}\n\nfunction* watchCredits() {\n  yield takeLatest(CREDITS_ALLPOSTS_REQUEST, credits);\n}\n\nexport default function* creditsSaga() {\n  yield all([\n      fork(watchCredits)\n  ])\n}","import { all, fork } from 'redux-saga/effects';\nimport listSaga from './list';\nimport searchSaga from './search';\nimport creditsSaga from './credits';\n\nexport default function* rootSaga() {\n    yield all([\n        fork(listSaga),\n        fork(searchSaga),\n        fork(creditsSaga),\n    ]);\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport createSagaMiddleware from '@redux-saga/core';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { createLogger } from 'redux-logger';\nimport rootReducer from '../reducer';\nimport rootSaga from '../saga';\n\nconst logger = createLogger();\nconst sagaMidleware = createSagaMiddleware();\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(applyMiddleware(logger, sagaMidleware))\n);\n\nexport const sagaRun = () => {\n    sagaMidleware.run(rootSaga);\n};\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport store, { sagaRun } from './store';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n);\n\nsagaRun();"],"sourceRoot":""}